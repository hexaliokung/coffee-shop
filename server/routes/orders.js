const express = require('express');
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

const authenticateToken = require('../middlewares/authMiddleware'); // import middleware
const router = express.Router();

// üîí ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ middleware
router.post('/orders', authenticateToken, async (req, res) => {
  try {
    const { items, total, status } = req.body;
    const userId = req.user.id; // ‡πÑ‡∏î‡πâ userId ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å token ‡πÅ‡∏•‡πâ‡∏ß

    const order = await prisma.order.create({
      data: {
        userId,
        total,
        status,
        items, // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏´‡∏£‡∏∑‡∏≠ array
      },
    });

    res.status(201).json(order);
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠' });
  }
});

router.get('/orders/history', authenticateToken, async (req, res) => {
  try {
    const userId = req.user.id;

    const orders = await prisma.order.findMany({
      where: { userId },
      orderBy: { createdAt: 'desc' },
    });

    res.json(orders);
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ' });
  }
});

module.exports = router;
